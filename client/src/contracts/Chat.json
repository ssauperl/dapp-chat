{
  "contractName": "Chat",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "chats",
      "outputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "toAddress",
          "type": "address"
        },
        {
          "name": "content",
          "type": "string"
        },
        {
          "name": "timestamp",
          "type": "string"
        }
      ],
      "name": "sendAMessage",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "toAddress",
          "type": "address"
        }
      ],
      "name": "getChatHistory",
      "outputs": [
        {
          "components": [
            {
              "name": "origin",
              "type": "address"
            },
            {
              "name": "timestamp",
              "type": "string"
            },
            {
              "name": "text",
              "type": "string"
            }
          ],
          "name": "userMessages",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "toAddress",
          "type": "string"
        }
      ],
      "name": "getTest",
      "outputs": [
        {
          "name": "test",
          "type": "address"
        },
        {
          "name": "zzz",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"toAddress\",\"type\":\"address\"}],\"name\":\"getChatHistory\",\"outputs\":[{\"components\":[{\"name\":\"origin\",\"type\":\"address\"},{\"name\":\"timestamp\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"string\"}],\"name\":\"userMessages\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"chats\",\"outputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"toAddress\",\"type\":\"string\"}],\"name\":\"getTest\",\"outputs\":[{\"name\":\"test\",\"type\":\"address\"},{\"name\":\"zzz\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"toAddress\",\"type\":\"address\"},{\"name\":\"content\",\"type\":\"string\"},{\"name\":\"timestamp\",\"type\":\"string\"}],\"name\":\"sendAMessage\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/nc/dev/dojo-dapp-chat/contracts/Chat.sol\":\"Chat\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/nc/dev/dojo-dapp-chat/contracts/Chat.sol\":{\"keccak256\":\"0x8af0d2d9dcc3eb7ac17733eef83535c33bc54050ec27da9a0c64c91db4460f42\",\"urls\":[\"bzzr://19bfbaeee0b17f220f318b36a90b39480da8b410fc99f3fb455c1203d1f9277c\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610c13806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063396512e8146100515780634e0ed3bd1461008157806365543de0146100b1578063a2afb94b146100e2575b600080fd5b61006b600480360361006691908101906107b0565b6100fe565b6040516100789190610a54565b60405180910390f35b61009b600480360361009691908101906107b0565b610375565b6040516100a89190610a09565b60405180910390f35b6100cb60048036036100c69190810190610858565b6103b3565b6040516100d9929190610a24565b60405180910390f35b6100fc60048036036100f791908101906107d9565b6103c2565b005b60606000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561036a57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102b05780601f10610285576101008083540402835291602001916102b0565b820191906000526020600020905b81548152906001019060200180831161029357829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103525780601f1061032757610100808354040283529160200191610352565b820191906000526020600020905b81548152906001019060200180831161033557829003601f168201915b5050505050815250508152602001906001019061019e565b505050509050919050565b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081565b60006060339150829050915091565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905061040c61066b565b60405180606001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481525090508160010160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050906001820390600052602060002090600302016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908051906020019061050f9291906106a2565b50604082015181600201908051906020019061052c9291906106a2565b5050505060008060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020829080600181540180825580915050906001820390600052602060002090600302016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906106429291906106a2565b50604082015181600201908051906020019061065f9291906106a2565b50505050505050505050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106106e357805160ff1916838001178555610711565b82800160010185558215610711579182015b828111156107105782518255916020019190600101906106f5565b5b50905061071e9190610722565b5090565b61074491905b80821115610740576000816000905550600101610728565b5090565b90565b60008135905061075681610bc2565b92915050565b600082601f83011261076d57600080fd5b813561078061077b82610aa3565b610a76565b9150808252602083016020830185838301111561079c57600080fd5b6107a7838284610b6f565b50505092915050565b6000602082840312156107c257600080fd5b60006107d084828501610747565b91505092915050565b6000806000606084860312156107ee57600080fd5b60006107fc86828701610747565b935050602084013567ffffffffffffffff81111561081957600080fd5b6108258682870161075c565b925050604084013567ffffffffffffffff81111561084257600080fd5b61084e8682870161075c565b9150509250925092565b60006020828403121561086a57600080fd5b600082013567ffffffffffffffff81111561088457600080fd5b6108908482850161075c565b91505092915050565b60006108a583836109b2565b905092915050565b6108b681610b3d565b82525050565b6108c581610b3d565b82525050565b60006108d682610adc565b6108e08185610b0a565b9350836020820285016108f285610acf565b8060005b8581101561092e578484038952815161090f8582610899565b945061091a83610afd565b925060208a019950506001810190506108f6565b50829750879550505050505092915050565b600061094b82610af2565b6109558185610b2c565b9350610965818560208601610b7e565b61096e81610bb1565b840191505092915050565b600061098482610ae7565b61098e8185610b1b565b935061099e818560208601610b7e565b6109a781610bb1565b840191505092915050565b60006060830160008301516109ca60008601826108ad565b50602083015184820360208601526109e28282610979565b915050604083015184820360408601526109fc8282610979565b9150508091505092915050565b6000602082019050610a1e60008301846108bc565b92915050565b6000604082019050610a3960008301856108bc565b8181036020830152610a4b8184610940565b90509392505050565b60006020820190508181036000830152610a6e81846108cb565b905092915050565b6000604051905081810181811067ffffffffffffffff82111715610a9957600080fd5b8060405250919050565b600067ffffffffffffffff821115610aba57600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610b4882610b4f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015610b9c578082015181840152602081019050610b81565b83811115610bab576000848401525b50505050565b6000601f19601f8301169050919050565b610bcb81610b3d565b8114610bd657600080fd5b5056fea265627a7a72305820655cdaa848bf61bea93228212f1447aac6dd1f6d12f4b1351eae9fb01b2f75d16c6578706572696d656e74616cf50037",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c8063396512e8146100515780634e0ed3bd1461008157806365543de0146100b1578063a2afb94b146100e2575b600080fd5b61006b600480360361006691908101906107b0565b6100fe565b6040516100789190610a54565b60405180910390f35b61009b600480360361009691908101906107b0565b610375565b6040516100a89190610a09565b60405180910390f35b6100cb60048036036100c69190810190610858565b6103b3565b6040516100d9929190610a24565b60405180910390f35b6100fc60048036036100f791908101906107d9565b6103c2565b005b60606000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561036a57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102b05780601f10610285576101008083540402835291602001916102b0565b820191906000526020600020905b81548152906001019060200180831161029357829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103525780601f1061032757610100808354040283529160200191610352565b820191906000526020600020905b81548152906001019060200180831161033557829003601f168201915b5050505050815250508152602001906001019061019e565b505050509050919050565b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081565b60006060339150829050915091565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905061040c61066b565b60405180606001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481525090508160010160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050906001820390600052602060002090600302016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908051906020019061050f9291906106a2565b50604082015181600201908051906020019061052c9291906106a2565b5050505060008060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020829080600181540180825580915050906001820390600052602060002090600302016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906106429291906106a2565b50604082015181600201908051906020019061065f9291906106a2565b50505050505050505050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106106e357805160ff1916838001178555610711565b82800160010185558215610711579182015b828111156107105782518255916020019190600101906106f5565b5b50905061071e9190610722565b5090565b61074491905b80821115610740576000816000905550600101610728565b5090565b90565b60008135905061075681610bc2565b92915050565b600082601f83011261076d57600080fd5b813561078061077b82610aa3565b610a76565b9150808252602083016020830185838301111561079c57600080fd5b6107a7838284610b6f565b50505092915050565b6000602082840312156107c257600080fd5b60006107d084828501610747565b91505092915050565b6000806000606084860312156107ee57600080fd5b60006107fc86828701610747565b935050602084013567ffffffffffffffff81111561081957600080fd5b6108258682870161075c565b925050604084013567ffffffffffffffff81111561084257600080fd5b61084e8682870161075c565b9150509250925092565b60006020828403121561086a57600080fd5b600082013567ffffffffffffffff81111561088457600080fd5b6108908482850161075c565b91505092915050565b60006108a583836109b2565b905092915050565b6108b681610b3d565b82525050565b6108c581610b3d565b82525050565b60006108d682610adc565b6108e08185610b0a565b9350836020820285016108f285610acf565b8060005b8581101561092e578484038952815161090f8582610899565b945061091a83610afd565b925060208a019950506001810190506108f6565b50829750879550505050505092915050565b600061094b82610af2565b6109558185610b2c565b9350610965818560208601610b7e565b61096e81610bb1565b840191505092915050565b600061098482610ae7565b61098e8185610b1b565b935061099e818560208601610b7e565b6109a781610bb1565b840191505092915050565b60006060830160008301516109ca60008601826108ad565b50602083015184820360208601526109e28282610979565b915050604083015184820360408601526109fc8282610979565b9150508091505092915050565b6000602082019050610a1e60008301846108bc565b92915050565b6000604082019050610a3960008301856108bc565b8181036020830152610a4b8184610940565b90509392505050565b60006020820190508181036000830152610a6e81846108cb565b905092915050565b6000604051905081810181811067ffffffffffffffff82111715610a9957600080fd5b8060405250919050565b600067ffffffffffffffff821115610aba57600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610b4882610b4f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015610b9c578082015181840152602081019050610b81565b83811115610bab576000848401525b50505050565b6000601f19601f8301169050919050565b610bcb81610b3d565b8114610bd657600080fd5b5056fea265627a7a72305820655cdaa848bf61bea93228212f1447aac6dd1f6d12f4b1351eae9fb01b2f75d16c6578706572696d656e74616cf50037",
  "sourceMap": "68:1041:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;68:1041:0;;;;;;;",
  "deployedSourceMap": "68:1041:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;68:1041:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;708:201;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;258:43;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;919:188;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;306:396;;;;;;;;;;;;;;;;:::i;:::-;;708:201;796:29;856:5;:17;862:10;856:17;;;;;;;;;;;;;;;:26;;:37;883:9;856:37;;;;;;;;;;;;;;;841:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;708:201;;;:::o;258:43::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;919:188::-;1006:12;1020:17;1058:10;1053:15;;1082:9;1078:13;;919:188;;;:::o;306:396::-;408:27;438:5;:17;444:10;438:17;;;;;;;;;;;;;;;408:47;;461:26;;:::i;:::-;490:39;;;;;;;;498:10;490:39;;;;;;510:7;490:39;;;;519:9;490:39;;;461:68;;535:10;:19;;:30;555:9;535:30;;;;;;;;;;;;;;;571:11;535:48;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;535:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;594:29;626:5;:16;632:9;626:16;;;;;;;;;;;;;;;594:48;;648:12;:21;;:32;670:9;648:32;;;;;;;;;;;;;;;686:11;648:50;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;648:50:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;306:396;;;;;;:::o;68:1041::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;143:442;;245:3;238:4;230:6;226:17;222:27;212:2;;263:1;260;253:12;212:2;300:6;287:20;322:65;337:49;379:6;337:49;;;322:65;;;313:74;;407:6;400:5;393:21;443:4;435:6;431:17;476:4;469:5;465:16;511:3;502:6;497:3;493:16;490:25;487:2;;;528:1;525;518:12;487:2;538:41;572:6;567:3;562;538:41;;;205:380;;;;;;;;593:241;;697:2;685:9;676:7;672:23;668:32;665:2;;;713:1;710;703:12;665:2;748:1;765:53;810:7;801:6;790:9;786:22;765:53;;;755:63;;727:97;659:175;;;;;841:703;;;;999:2;987:9;978:7;974:23;970:32;967:2;;;1015:1;1012;1005:12;967:2;1050:1;1067:53;1112:7;1103:6;1092:9;1088:22;1067:53;;;1057:63;;1029:97;1185:2;1174:9;1170:18;1157:32;1209:18;1201:6;1198:30;1195:2;;;1241:1;1238;1231:12;1195:2;1261:63;1316:7;1307:6;1296:9;1292:22;1261:63;;;1251:73;;1136:194;1389:2;1378:9;1374:18;1361:32;1413:18;1405:6;1402:30;1399:2;;;1445:1;1442;1435:12;1399:2;1465:63;1520:7;1511:6;1500:9;1496:22;1465:63;;;1455:73;;1340:194;961:583;;;;;;1551:347;;1665:2;1653:9;1644:7;1640:23;1636:32;1633:2;;;1681:1;1678;1671:12;1633:2;1744:1;1733:9;1729:17;1716:31;1767:18;1759:6;1756:30;1753:2;;;1799:1;1796;1789:12;1753:2;1819:63;1874:7;1865:6;1854:9;1850:22;1819:63;;;1809:73;;1695:193;1627:271;;;;;1906:229;;2043:86;2125:3;2117:6;2043:86;;;2029:100;;2022:113;;;;;2143:103;2216:24;2234:5;2216:24;;;2211:3;2204:37;2198:48;;;2253:113;2336:24;2354:5;2336:24;;;2331:3;2324:37;2318:48;;;2428:992;;2609:72;2675:5;2609:72;;;2694:104;2791:6;2786:3;2694:104;;;2687:111;;2821:3;2863:4;2855:6;2851:17;2846:3;2842:27;2890:74;2958:5;2890:74;;;2984:7;3012:1;2997:384;3022:6;3019:1;3016:13;2997:384;;;3084:9;3078:4;3074:20;3069:3;3062:33;3129:6;3123:13;3151:100;3246:4;3231:13;3151:100;;;3143:108;;3268:78;3339:6;3268:78;;;3258:88;;3369:4;3364:3;3360:14;3353:21;;3054:327;3044:1;3041;3037:9;3032:14;;2997:384;;;3001:14;3394:4;3387:11;;3411:3;3404:10;;2588:832;;;;;;;;;;3428:347;;3540:39;3573:5;3540:39;;;3591:71;3655:6;3650:3;3591:71;;;3584:78;;3667:52;3712:6;3707:3;3700:4;3693:5;3689:16;3667:52;;;3740:29;3762:6;3740:29;;;3735:3;3731:39;3724:46;;3520:255;;;;;;3782:319;;3880:35;3909:5;3880:35;;;3927:61;3981:6;3976:3;3927:61;;;3920:68;;3993:52;4038:6;4033:3;4026:4;4019:5;4015:16;3993:52;;;4066:29;4088:6;4066:29;;;4061:3;4057:39;4050:46;;3860:241;;;;;;4157:778;;4288:4;4283:3;4279:14;4373:3;4366:5;4362:15;4356:22;4384:62;4441:3;4436;4432:13;4418:12;4384:62;;;4308:144;4530:4;4523:5;4519:16;4513:23;4582:3;4576:4;4572:14;4565:4;4560:3;4556:14;4549:38;4602:69;4666:4;4652:12;4602:69;;;4594:77;;4462:221;4756:4;4749:5;4745:16;4739:23;4808:3;4802:4;4798:14;4791:4;4786:3;4782:14;4775:38;4828:69;4892:4;4878:12;4828:69;;;4820:77;;4693:216;4926:4;4919:11;;4261:674;;;;;;4942:213;;5060:2;5049:9;5045:18;5037:26;;5074:71;5142:1;5131:9;5127:17;5118:6;5074:71;;;5031:124;;;;;5162:412;;5328:2;5317:9;5313:18;5305:26;;5342:71;5410:1;5399:9;5395:17;5386:6;5342:71;;;5461:9;5455:4;5451:20;5446:2;5435:9;5431:18;5424:48;5486:78;5559:4;5550:6;5486:78;;;5478:86;;5299:275;;;;;;5581:433;;5785:2;5774:9;5770:18;5762:26;;5835:9;5829:4;5825:20;5821:1;5810:9;5806:17;5799:47;5860:144;5999:4;5990:6;5860:144;;;5852:152;;5756:258;;;;;6021:256;;6083:2;6077:9;6067:19;;6121:4;6113:6;6109:17;6220:6;6208:10;6205:22;6184:18;6172:10;6169:34;6166:62;6163:2;;;6241:1;6238;6231:12;6163:2;6261:10;6257:2;6250:22;6061:216;;;;;6284:259;;6428:18;6420:6;6417:30;6414:2;;;6460:1;6457;6450:12;6414:2;6504:4;6500:9;6493:4;6485:6;6481:17;6477:33;6469:41;;6533:4;6527;6523:15;6515:23;;6351:192;;;;6553:141;;6681:4;6673:6;6669:17;6658:28;;6649:45;;;;6704:125;;6818:5;6812:12;6802:22;;6796:33;;;;6836:88;;6913:5;6907:12;6897:22;;6891:33;;;;6931:92;;7012:5;7006:12;6996:22;;6990:33;;;;7032:142;;7162:4;7154:6;7150:17;7139:28;;7131:43;;;;7184:196;;7332:6;7327:3;7320:19;7369:4;7364:3;7360:14;7345:29;;7313:67;;;;;7389:153;;7494:6;7489:3;7482:19;7531:4;7526:3;7522:14;7507:29;;7475:67;;;;;7551:163;;7666:6;7661:3;7654:19;7703:4;7698:3;7694:14;7679:29;;7647:67;;;;;7722:91;;7784:24;7802:5;7784:24;;;7773:35;;7767:46;;;;7820:121;;7893:42;7886:5;7882:54;7871:65;;7865:76;;;;7949:145;8030:6;8025:3;8020;8007:30;8086:1;8077:6;8072:3;8068:16;8061:27;8000:94;;;;8103:268;8168:1;8175:101;8189:6;8186:1;8183:13;8175:101;;;8265:1;8260:3;8256:11;8250:18;8246:1;8241:3;8237:11;8230:39;8211:2;8208:1;8204:10;8199:15;;8175:101;;;8291:6;8288:1;8285:13;8282:2;;;8356:1;8347:6;8342:3;8338:16;8331:27;8282:2;8152:219;;;;;8379:97;;8467:2;8463:7;8458:2;8451:5;8447:14;8443:28;8433:38;;8427:49;;;;8484:117;8553:24;8571:5;8553:24;;;8546:5;8543:35;8533:2;;8592:1;8589;8582:12;8533:2;8527:74;",
  "source": "pragma solidity >=0.4.0 <0.6.0;\npragma experimental ABIEncoderV2;\n\n\ncontract Chat {\n\n struct  Message {\n     address origin;\n     string timestamp;\n     string text;\n }\n \nstruct UserChat {\n  address owner;\n  mapping (address => Message[]) messages ;\n }\n \n\n \nmapping (address => UserChat) public  chats;\n\n\n\nfunction sendAMessage(address toAddress, string memory content, string memory timestamp) public {\n    UserChat storage senderChat = chats[msg.sender];\n    Message memory userMessage = Message(msg.sender, content, timestamp);\n    senderChat.messages[toAddress].push(userMessage);\n    \n    UserChat storage recieverChat = chats[toAddress];\n    recieverChat.messages[toAddress].push(userMessage);\n\n}\n\n    function getChatHistory(address toAddress)\n        public\n        view\n        returns (Message[] memory userMessages)\n    {\n        userMessages = chats[msg.sender].messages[toAddress];\n        \n    }\n    \n    function getTest(string memory toAddress)\n        public\n        view\n        returns (address test, string memory zzz)\n    {\n        test=msg.sender;\n        zzz=toAddress;\n        \n    }\n}",
  "sourcePath": "/nc/dev/dojo-dapp-chat/contracts/Chat.sol",
  "ast": {
    "absolutePath": "/nc/dev/dojo-dapp-chat/contracts/Chat.sol",
    "exportedSymbols": {
      "Chat": [
        110
      ]
    },
    "id": 111,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:33:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 110,
        "linearizedBaseContracts": [
          110
        ],
        "name": "Chat",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Chat.Message",
            "id": 9,
            "members": [
              {
                "constant": false,
                "id": 4,
                "name": "origin",
                "nodeType": "VariableDeclaration",
                "scope": 9,
                "src": "109:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 3,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "109:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6,
                "name": "timestamp",
                "nodeType": "VariableDeclaration",
                "scope": 9,
                "src": "130:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 5,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "130:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8,
                "name": "text",
                "nodeType": "VariableDeclaration",
                "scope": 9,
                "src": "153:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 7,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "153:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Message",
            "nodeType": "StructDefinition",
            "scope": 110,
            "src": "86:82:0",
            "visibility": "public"
          },
          {
            "canonicalName": "Chat.UserChat",
            "id": 17,
            "members": [
              {
                "constant": false,
                "id": 11,
                "name": "owner",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "191:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 10,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "191:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 16,
                "name": "messages",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "208:39:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Message_$9_storage_$dyn_storage_$",
                  "typeString": "mapping(address => struct Chat.Message[])"
                },
                "typeName": {
                  "id": 15,
                  "keyType": {
                    "id": 12,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "217:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "208:30:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Message_$9_storage_$dyn_storage_$",
                    "typeString": "mapping(address => struct Chat.Message[])"
                  },
                  "valueType": {
                    "baseType": {
                      "contractScope": null,
                      "id": 13,
                      "name": "Message",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 9,
                      "src": "228:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Message_$9_storage_ptr",
                        "typeString": "struct Chat.Message"
                      }
                    },
                    "id": 14,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "228:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Message_$9_storage_$dyn_storage_ptr",
                      "typeString": "struct Chat.Message[]"
                    }
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "UserChat",
            "nodeType": "StructDefinition",
            "scope": 110,
            "src": "171:81:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 21,
            "name": "chats",
            "nodeType": "VariableDeclaration",
            "scope": 110,
            "src": "258:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserChat_$17_storage_$",
              "typeString": "mapping(address => struct Chat.UserChat)"
            },
            "typeName": {
              "id": 20,
              "keyType": {
                "id": 18,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "267:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "258:29:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserChat_$17_storage_$",
                "typeString": "mapping(address => struct Chat.UserChat)"
              },
              "valueType": {
                "contractScope": null,
                "id": 19,
                "name": "UserChat",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 17,
                "src": "278:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UserChat_$17_storage_ptr",
                  "typeString": "struct Chat.UserChat"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 70,
              "nodeType": "Block",
              "src": "402:300:0",
              "statements": [
                {
                  "assignments": [
                    31
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31,
                      "name": "senderChat",
                      "nodeType": "VariableDeclaration",
                      "scope": 70,
                      "src": "408:27:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserChat_$17_storage_ptr",
                        "typeString": "struct Chat.UserChat"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 30,
                        "name": "UserChat",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 17,
                        "src": "408:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserChat_$17_storage_ptr",
                          "typeString": "struct Chat.UserChat"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 36,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 32,
                      "name": "chats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "438:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserChat_$17_storage_$",
                        "typeString": "mapping(address => struct Chat.UserChat storage ref)"
                      }
                    },
                    "id": 35,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 33,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 205,
                        "src": "444:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 34,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "444:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "438:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserChat_$17_storage",
                      "typeString": "struct Chat.UserChat storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "408:47:0"
                },
                {
                  "assignments": [
                    38
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38,
                      "name": "userMessage",
                      "nodeType": "VariableDeclaration",
                      "scope": 70,
                      "src": "461:26:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Message_$9_memory_ptr",
                        "typeString": "struct Chat.Message"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 37,
                        "name": "Message",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 9,
                        "src": "461:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Message_$9_storage_ptr",
                          "typeString": "struct Chat.Message"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 45,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 40,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 205,
                          "src": "498:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 41,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "498:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 42,
                        "name": "content",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "510:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 43,
                        "name": "timestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "519:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 39,
                      "name": "Message",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "490:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Message_$9_storage_ptr_$",
                        "typeString": "type(struct Chat.Message storage pointer)"
                      }
                    },
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "490:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Message_$9_memory",
                      "typeString": "struct Chat.Message memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "461:68:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 52,
                        "name": "userMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "571:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Message_$9_memory_ptr",
                          "typeString": "struct Chat.Message memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Message_$9_memory_ptr",
                          "typeString": "struct Chat.Message memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 46,
                            "name": "senderChat",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "535:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserChat_$17_storage_ptr",
                              "typeString": "struct Chat.UserChat storage pointer"
                            }
                          },
                          "id": 49,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "messages",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16,
                          "src": "535:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Message_$9_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Chat.Message storage ref[] storage ref)"
                          }
                        },
                        "id": 50,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 48,
                          "name": "toAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "555:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "535:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Message_$9_storage_$dyn_storage",
                          "typeString": "struct Chat.Message storage ref[] storage ref"
                        }
                      },
                      "id": 51,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "535:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Message_$9_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct Chat.Message storage ref) returns (uint256)"
                      }
                    },
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "535:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "535:48:0"
                },
                {
                  "assignments": [
                    56
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 56,
                      "name": "recieverChat",
                      "nodeType": "VariableDeclaration",
                      "scope": 70,
                      "src": "594:29:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserChat_$17_storage_ptr",
                        "typeString": "struct Chat.UserChat"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 55,
                        "name": "UserChat",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 17,
                        "src": "594:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserChat_$17_storage_ptr",
                          "typeString": "struct Chat.UserChat"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 60,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 57,
                      "name": "chats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "626:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserChat_$17_storage_$",
                        "typeString": "mapping(address => struct Chat.UserChat storage ref)"
                      }
                    },
                    "id": 59,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 58,
                      "name": "toAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "632:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "626:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserChat_$17_storage",
                      "typeString": "struct Chat.UserChat storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "594:48:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 67,
                        "name": "userMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "686:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Message_$9_memory_ptr",
                          "typeString": "struct Chat.Message memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Message_$9_memory_ptr",
                          "typeString": "struct Chat.Message memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 61,
                            "name": "recieverChat",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "648:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserChat_$17_storage_ptr",
                              "typeString": "struct Chat.UserChat storage pointer"
                            }
                          },
                          "id": 64,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "messages",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16,
                          "src": "648:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Message_$9_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Chat.Message storage ref[] storage ref)"
                          }
                        },
                        "id": 65,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 63,
                          "name": "toAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "670:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "648:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Message_$9_storage_$dyn_storage",
                          "typeString": "struct Chat.Message storage ref[] storage ref"
                        }
                      },
                      "id": 66,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "648:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Message_$9_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct Chat.Message storage ref) returns (uint256)"
                      }
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "648:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 69,
                  "nodeType": "ExpressionStatement",
                  "src": "648:50:0"
                }
              ]
            },
            "documentation": null,
            "id": 71,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendAMessage",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23,
                  "name": "toAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "328:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "328:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "name": "content",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "347:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "347:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "370:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "370:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "327:67:0"
            },
            "returnParameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "402:0:0"
            },
            "scope": 110,
            "src": "306:396:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 89,
              "nodeType": "Block",
              "src": "831:78:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 79,
                      "name": "userMessages",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "841:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Message_$9_memory_$dyn_memory_ptr",
                        "typeString": "struct Chat.Message memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 80,
                            "name": "chats",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "856:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserChat_$17_storage_$",
                              "typeString": "mapping(address => struct Chat.UserChat storage ref)"
                            }
                          },
                          "id": 83,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 81,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 205,
                              "src": "862:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 82,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "862:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "856:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserChat_$17_storage",
                            "typeString": "struct Chat.UserChat storage ref"
                          }
                        },
                        "id": 84,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "messages",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16,
                        "src": "856:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Message_$9_storage_$dyn_storage_$",
                          "typeString": "mapping(address => struct Chat.Message storage ref[] storage ref)"
                        }
                      },
                      "id": 86,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 85,
                        "name": "toAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "883:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "856:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Message_$9_storage_$dyn_storage",
                        "typeString": "struct Chat.Message storage ref[] storage ref"
                      }
                    },
                    "src": "841:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Message_$9_memory_$dyn_memory_ptr",
                      "typeString": "struct Chat.Message memory[] memory"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "841:52:0"
                }
              ]
            },
            "documentation": null,
            "id": 90,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getChatHistory",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73,
                  "name": "toAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 90,
                  "src": "732:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "732:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "731:19:0"
            },
            "returnParameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "name": "userMessages",
                  "nodeType": "VariableDeclaration",
                  "scope": 90,
                  "src": "796:29:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Message_$9_memory_$dyn_memory_ptr",
                    "typeString": "struct Chat.Message[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 75,
                      "name": "Message",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 9,
                      "src": "796:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Message_$9_storage_ptr",
                        "typeString": "struct Chat.Message"
                      }
                    },
                    "id": 76,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "796:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Message_$9_storage_$dyn_storage_ptr",
                      "typeString": "struct Chat.Message[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "795:31:0"
            },
            "scope": 110,
            "src": "708:201:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 108,
              "nodeType": "Block",
              "src": "1043:64:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 99,
                      "name": "test",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "1053:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 100,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 205,
                        "src": "1058:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1058:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1053:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 103,
                  "nodeType": "ExpressionStatement",
                  "src": "1053:15:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 104,
                      "name": "zzz",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "1078:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 105,
                      "name": "toAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92,
                      "src": "1082:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1078:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 107,
                  "nodeType": "ExpressionStatement",
                  "src": "1078:13:0"
                }
              ]
            },
            "documentation": null,
            "id": 109,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92,
                  "name": "toAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "936:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "936:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "935:25:0"
            },
            "returnParameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 95,
                  "name": "test",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "1006:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1006:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97,
                  "name": "zzz",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "1020:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1020:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1005:33:0"
            },
            "scope": 110,
            "src": "919:188:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 111,
        "src": "68:1041:0"
      }
    ],
    "src": "0:1109:0"
  },
  "legacyAST": {
    "absolutePath": "/nc/dev/dojo-dapp-chat/contracts/Chat.sol",
    "exportedSymbols": {
      "Chat": [
        110
      ]
    },
    "id": 111,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:33:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 110,
        "linearizedBaseContracts": [
          110
        ],
        "name": "Chat",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Chat.Message",
            "id": 9,
            "members": [
              {
                "constant": false,
                "id": 4,
                "name": "origin",
                "nodeType": "VariableDeclaration",
                "scope": 9,
                "src": "109:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 3,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "109:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6,
                "name": "timestamp",
                "nodeType": "VariableDeclaration",
                "scope": 9,
                "src": "130:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 5,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "130:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8,
                "name": "text",
                "nodeType": "VariableDeclaration",
                "scope": 9,
                "src": "153:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 7,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "153:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Message",
            "nodeType": "StructDefinition",
            "scope": 110,
            "src": "86:82:0",
            "visibility": "public"
          },
          {
            "canonicalName": "Chat.UserChat",
            "id": 17,
            "members": [
              {
                "constant": false,
                "id": 11,
                "name": "owner",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "191:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 10,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "191:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 16,
                "name": "messages",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "208:39:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Message_$9_storage_$dyn_storage_$",
                  "typeString": "mapping(address => struct Chat.Message[])"
                },
                "typeName": {
                  "id": 15,
                  "keyType": {
                    "id": 12,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "217:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "208:30:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Message_$9_storage_$dyn_storage_$",
                    "typeString": "mapping(address => struct Chat.Message[])"
                  },
                  "valueType": {
                    "baseType": {
                      "contractScope": null,
                      "id": 13,
                      "name": "Message",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 9,
                      "src": "228:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Message_$9_storage_ptr",
                        "typeString": "struct Chat.Message"
                      }
                    },
                    "id": 14,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "228:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Message_$9_storage_$dyn_storage_ptr",
                      "typeString": "struct Chat.Message[]"
                    }
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "UserChat",
            "nodeType": "StructDefinition",
            "scope": 110,
            "src": "171:81:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 21,
            "name": "chats",
            "nodeType": "VariableDeclaration",
            "scope": 110,
            "src": "258:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserChat_$17_storage_$",
              "typeString": "mapping(address => struct Chat.UserChat)"
            },
            "typeName": {
              "id": 20,
              "keyType": {
                "id": 18,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "267:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "258:29:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserChat_$17_storage_$",
                "typeString": "mapping(address => struct Chat.UserChat)"
              },
              "valueType": {
                "contractScope": null,
                "id": 19,
                "name": "UserChat",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 17,
                "src": "278:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UserChat_$17_storage_ptr",
                  "typeString": "struct Chat.UserChat"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 70,
              "nodeType": "Block",
              "src": "402:300:0",
              "statements": [
                {
                  "assignments": [
                    31
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31,
                      "name": "senderChat",
                      "nodeType": "VariableDeclaration",
                      "scope": 70,
                      "src": "408:27:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserChat_$17_storage_ptr",
                        "typeString": "struct Chat.UserChat"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 30,
                        "name": "UserChat",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 17,
                        "src": "408:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserChat_$17_storage_ptr",
                          "typeString": "struct Chat.UserChat"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 36,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 32,
                      "name": "chats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "438:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserChat_$17_storage_$",
                        "typeString": "mapping(address => struct Chat.UserChat storage ref)"
                      }
                    },
                    "id": 35,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 33,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 205,
                        "src": "444:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 34,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "444:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "438:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserChat_$17_storage",
                      "typeString": "struct Chat.UserChat storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "408:47:0"
                },
                {
                  "assignments": [
                    38
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38,
                      "name": "userMessage",
                      "nodeType": "VariableDeclaration",
                      "scope": 70,
                      "src": "461:26:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Message_$9_memory_ptr",
                        "typeString": "struct Chat.Message"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 37,
                        "name": "Message",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 9,
                        "src": "461:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Message_$9_storage_ptr",
                          "typeString": "struct Chat.Message"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 45,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 40,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 205,
                          "src": "498:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 41,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "498:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 42,
                        "name": "content",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "510:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 43,
                        "name": "timestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "519:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 39,
                      "name": "Message",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "490:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Message_$9_storage_ptr_$",
                        "typeString": "type(struct Chat.Message storage pointer)"
                      }
                    },
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "490:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Message_$9_memory",
                      "typeString": "struct Chat.Message memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "461:68:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 52,
                        "name": "userMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "571:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Message_$9_memory_ptr",
                          "typeString": "struct Chat.Message memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Message_$9_memory_ptr",
                          "typeString": "struct Chat.Message memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 46,
                            "name": "senderChat",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "535:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserChat_$17_storage_ptr",
                              "typeString": "struct Chat.UserChat storage pointer"
                            }
                          },
                          "id": 49,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "messages",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16,
                          "src": "535:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Message_$9_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Chat.Message storage ref[] storage ref)"
                          }
                        },
                        "id": 50,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 48,
                          "name": "toAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "555:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "535:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Message_$9_storage_$dyn_storage",
                          "typeString": "struct Chat.Message storage ref[] storage ref"
                        }
                      },
                      "id": 51,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "535:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Message_$9_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct Chat.Message storage ref) returns (uint256)"
                      }
                    },
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "535:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "535:48:0"
                },
                {
                  "assignments": [
                    56
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 56,
                      "name": "recieverChat",
                      "nodeType": "VariableDeclaration",
                      "scope": 70,
                      "src": "594:29:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserChat_$17_storage_ptr",
                        "typeString": "struct Chat.UserChat"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 55,
                        "name": "UserChat",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 17,
                        "src": "594:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserChat_$17_storage_ptr",
                          "typeString": "struct Chat.UserChat"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 60,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 57,
                      "name": "chats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "626:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserChat_$17_storage_$",
                        "typeString": "mapping(address => struct Chat.UserChat storage ref)"
                      }
                    },
                    "id": 59,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 58,
                      "name": "toAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "632:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "626:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserChat_$17_storage",
                      "typeString": "struct Chat.UserChat storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "594:48:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 67,
                        "name": "userMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "686:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Message_$9_memory_ptr",
                          "typeString": "struct Chat.Message memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Message_$9_memory_ptr",
                          "typeString": "struct Chat.Message memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 61,
                            "name": "recieverChat",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "648:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserChat_$17_storage_ptr",
                              "typeString": "struct Chat.UserChat storage pointer"
                            }
                          },
                          "id": 64,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "messages",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16,
                          "src": "648:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Message_$9_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Chat.Message storage ref[] storage ref)"
                          }
                        },
                        "id": 65,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 63,
                          "name": "toAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "670:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "648:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Message_$9_storage_$dyn_storage",
                          "typeString": "struct Chat.Message storage ref[] storage ref"
                        }
                      },
                      "id": 66,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "648:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Message_$9_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct Chat.Message storage ref) returns (uint256)"
                      }
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "648:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 69,
                  "nodeType": "ExpressionStatement",
                  "src": "648:50:0"
                }
              ]
            },
            "documentation": null,
            "id": 71,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendAMessage",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23,
                  "name": "toAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "328:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "328:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "name": "content",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "347:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "347:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "370:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "370:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "327:67:0"
            },
            "returnParameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "402:0:0"
            },
            "scope": 110,
            "src": "306:396:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 89,
              "nodeType": "Block",
              "src": "831:78:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 79,
                      "name": "userMessages",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "841:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Message_$9_memory_$dyn_memory_ptr",
                        "typeString": "struct Chat.Message memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 80,
                            "name": "chats",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "856:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserChat_$17_storage_$",
                              "typeString": "mapping(address => struct Chat.UserChat storage ref)"
                            }
                          },
                          "id": 83,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 81,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 205,
                              "src": "862:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 82,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "862:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "856:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserChat_$17_storage",
                            "typeString": "struct Chat.UserChat storage ref"
                          }
                        },
                        "id": 84,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "messages",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16,
                        "src": "856:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Message_$9_storage_$dyn_storage_$",
                          "typeString": "mapping(address => struct Chat.Message storage ref[] storage ref)"
                        }
                      },
                      "id": 86,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 85,
                        "name": "toAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "883:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "856:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Message_$9_storage_$dyn_storage",
                        "typeString": "struct Chat.Message storage ref[] storage ref"
                      }
                    },
                    "src": "841:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Message_$9_memory_$dyn_memory_ptr",
                      "typeString": "struct Chat.Message memory[] memory"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "841:52:0"
                }
              ]
            },
            "documentation": null,
            "id": 90,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getChatHistory",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73,
                  "name": "toAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 90,
                  "src": "732:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "732:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "731:19:0"
            },
            "returnParameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "name": "userMessages",
                  "nodeType": "VariableDeclaration",
                  "scope": 90,
                  "src": "796:29:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Message_$9_memory_$dyn_memory_ptr",
                    "typeString": "struct Chat.Message[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 75,
                      "name": "Message",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 9,
                      "src": "796:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Message_$9_storage_ptr",
                        "typeString": "struct Chat.Message"
                      }
                    },
                    "id": 76,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "796:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Message_$9_storage_$dyn_storage_ptr",
                      "typeString": "struct Chat.Message[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "795:31:0"
            },
            "scope": 110,
            "src": "708:201:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 108,
              "nodeType": "Block",
              "src": "1043:64:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 99,
                      "name": "test",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "1053:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 100,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 205,
                        "src": "1058:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1058:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1053:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 103,
                  "nodeType": "ExpressionStatement",
                  "src": "1053:15:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 104,
                      "name": "zzz",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "1078:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 105,
                      "name": "toAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92,
                      "src": "1082:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1078:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 107,
                  "nodeType": "ExpressionStatement",
                  "src": "1078:13:0"
                }
              ]
            },
            "documentation": null,
            "id": 109,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92,
                  "name": "toAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "936:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "936:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "935:25:0"
            },
            "returnParameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 95,
                  "name": "test",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "1006:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1006:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97,
                  "name": "zzz",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "1020:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1020:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1005:33:0"
            },
            "scope": 110,
            "src": "919:188:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 111,
        "src": "68:1041:0"
      }
    ],
    "src": "0:1109:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {
    "1568037392186": {
      "events": {},
      "links": {},
      "address": "0xfdd402B6582E696BEeeD9F55671bB58d5F1aC88D",
      "transactionHash": "0xdf424d314f50c85379f65d50309c64f473df5a327fe8118cffd00eb21d5861fc"
    },
    "1568039294226": {
      "events": {},
      "links": {},
      "address": "0x0a73E35DaD34D7dCcAf6855B80e2B86268429Aac",
      "transactionHash": "0x178131350dd6c237888bb3dc6c7ee01aaac09d48768201ac7535464dd5118781"
    }
  },
  "schemaVersion": "3.0.15",
  "updatedAt": "2019-09-09T14:28:29.887Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}